<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.Eparking.dao.CustomerMapper">
    
    <select id="getCustomerById" resultType="com.project.Eparking.domain.Customer">
        SELECT
            customerID,
            wallet_balance,
            identify,
            role,
            phoneNumber,
            fullName,
            password,
            email,
            registrationDate,
            status
        FROM
            customer
        WHERE
            customerID = #{customerID};
    </select>

    <select id="getListCustomer" resultType="com.project.Eparking.domain.Customer">
        SELECT
            customerID,
            wallet_balance,
            identify,
            role,
            phoneNumber,
            fullName,
            password,
            email,
            registrationDate,
            status
        FROM
            customer
        LIMIT
            #{pageSize}
        OFFSET
            #{pageNum};
    </select>

    <select id="countRecords" resultType="java.lang.Integer">
        SELECT
            COUNT(*)
        FROM
            customer
        <if test="keywords != null and !keywords.isEmpty()">
        WHERE
            fullName REGEXP #{keywords}
        </if>
    </select>

    <select id="getListCustomerByName" resultType="com.project.Eparking.domain.Customer">
        SELECT
            customerID,
            wallet_balance,
            identify,
            role,
            phoneNumber,
            fullName,
            password,
            email,
            registrationDate,
            status
        FROM
            customer
        WHERE
            fullName REGEXP #{name}
        LIMIT
            #{pageSize}
        OFFSET
            #{pageNum};
    </select>

    <update id="updateCustomerProfile" parameterType="com.project.Eparking.domain.request.RequestCustomerUpdateProfile">
        UPDATE customer
            SET fullName = #{profile.fullName},
            email = #{profile.email}
        WHERE customerID = #{customerID}
    </update>

    <update id="updatePasswordCustomer" parameterType="com.project.Eparking.domain.Customer">
        UPDATE customer
        SET password = #{password}
        WHERE customerID = #{customerID}
    </update>

    <update id="updateBalance" parameterType="com.project.Eparking.domain.Customer">
        UPDATE customer
        Set wallet_balance = #{balance}
        WHERE customerID = #{customerID}
    </update>

    <select id="countRecordsByWeekCustomer" resultType="com.project.Eparking.domain.response.Response4week">
        <![CDATA[
            SELECT
                IFNULL(SUM(CASE WHEN registrationDate >= DATE_ADD(STR_TO_DATE(CONCAT(#{year}, '-', #{month}, '-01 00:00:00'), '%Y-%m-%d'), INTERVAL 0 WEEK)
                              AND registrationDate < DATE_ADD(STR_TO_DATE(CONCAT(#{year}, '-', #{month}, '-01 00:00:00'), '%Y-%m-%d'), INTERVAL 1 WEEK) THEN 1 ELSE 0 END), 0) AS Week1,

                IFNULL(SUM(CASE WHEN registrationDate >= DATE_ADD(STR_TO_DATE(CONCAT(#{year}, '-', #{month}, '-01 00:00:00'), '%Y-%m-%d'), INTERVAL 1 WEEK)
                              AND registrationDate < DATE_ADD(STR_TO_DATE(CONCAT(#{year}, '-', #{month}, '-01 00:00:00'), '%Y-%m-%d'), INTERVAL 2 WEEK) THEN 1 ELSE 0 END), 0) AS Week2,

                IFNULL(SUM(CASE WHEN registrationDate >= DATE_ADD(STR_TO_DATE(CONCAT(#{year}, '-', #{month}, '-01 00:00:00'), '%Y-%m-%d'), INTERVAL 2 WEEK)
                              AND registrationDate < DATE_ADD(STR_TO_DATE(CONCAT(#{year}, '-', #{month}, '-01 00:00:00'), '%Y-%m-%d'), INTERVAL 3 WEEK) THEN 1 ELSE 0 END), 0) AS Week3,

                IFNULL(SUM(CASE WHEN registrationDate >= DATE_ADD(STR_TO_DATE(CONCAT(#{year}, '-', #{month}, '-01 00:00:00'), '%Y-%m-%d'), INTERVAL 3 WEEK)
                              AND registrationDate < DATE_ADD(STR_TO_DATE(CONCAT(#{year}, '-', #{month}, '-01 00:00:00'), '%Y-%m-%d'), INTERVAL 4 WEEK) THEN 1 ELSE 0 END), 0) AS Week4
            FROM customer
            WHERE MONTH(registrationDate) = MONTH(#{inputDate}) AND YEAR(registrationDate) = YEAR(#{inputDate});
        ]]>

    </select>


    <select id="getCustomerBalance" resultType="com.project.Eparking.domain.Customer">
        SELECT
            customerID,
            wallet_balance,
            identify,
            role,
            phoneNumber,
            fullName,
            password,
            email,
            registrationDate,
            status
        FROM
            customer
        WHERE
            customerID = #{customerID};
    </select>


<!--    <select id="getCustomerBalance" resultType="com.project.Eparking.domain.Customer">-->
<!--        SELECT-->
<!--            customerID,-->
<!--            wallet_balance,-->
<!--            identify,-->
<!--            role,-->
<!--            phoneNumber,-->
<!--            fullName,-->
<!--            password,-->
<!--            email,-->
<!--            registrationDate,-->
<!--            status-->
<!--        FROM-->
<!--            Customer-->
<!--        WHERE-->
<!--            customerID = #{customerID};-->
<!--    </select>-->
</mapper>